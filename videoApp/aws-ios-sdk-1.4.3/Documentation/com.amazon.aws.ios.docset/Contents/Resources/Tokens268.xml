<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/DynamoDBCondition.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/DynamoDBCondition</TokenIdentifier>
			<Abstract type="html">Condition</Abstract>
			<DeclaredIn>DynamoDBCondition.h</DeclaredIn>
			
			<NodeRef refid="268"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DynamoDBCondition/setAttributeValueList:</TokenIdentifier>
			<Abstract type="html">A list of attribute values to be used with a comparison operator for a
scan or query operation. For comparisons that require more than one
value, such as a &lt;code&gt;BETWEEN&lt;/code&gt; comparison, the
AttributeValueList contains two attribute values and the comparison
operator.</Abstract>
			<DeclaredIn>DynamoDBCondition.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSMutableArray *attributeValueList</Declaration>
			
			
			<Anchor>//api/name/attributeValueList</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DynamoDBCondition/attributeValueList</TokenIdentifier>
			<Abstract type="html">A list of attribute values to be used with a comparison operator for a
scan or query operation. For comparisons that require more than one
value, such as a &lt;code&gt;BETWEEN&lt;/code&gt; comparison, the
AttributeValueList contains two attribute values and the comparison
operator.</Abstract>
			<DeclaredIn>DynamoDBCondition.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSMutableArray *attributeValueList</Declaration>
			
			
			<Anchor>//api/name/attributeValueList</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DynamoDBCondition/setComparisonOperator:</TokenIdentifier>
			<Abstract type="html">A comparison operator is an enumeration of several operations: &lt;ul&gt;
&lt;li&gt;&lt;code&gt;EQ&lt;/code&gt; for &lt;em&gt;equal&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;NE&lt;/code&gt; for
&lt;em&gt;not equal&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;IN&lt;/code&gt; checks for exact
matches.&lt;/li&gt; &lt;li&gt;&lt;code&gt;LE&lt;/code&gt; for &lt;em&gt;less than or equal
to&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;LT&lt;/code&gt; for &lt;em&gt;less than&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GE&lt;/code&gt; for &lt;em&gt;greater than or equal to&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GT&lt;/code&gt; for &lt;em&gt;greater than&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BETWEEN&lt;/code&gt; for &lt;em&gt;between&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NOT_NULL&lt;/code&gt; for &lt;em&gt;exists&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NULL&lt;/code&gt; for &lt;em&gt;not exists&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CONTAINS&lt;/code&gt; for substring or value in a set.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NOT_CONTAINS&lt;/code&gt; for absence of a substring or absence of
a value in a set.&lt;/li&gt; &lt;li&gt;&lt;code&gt;BEGINS_WITH&lt;/code&gt; for a substring
prefix.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Scan operations support all available comparison
operators. &lt;p&gt;Query operations support a subset of the available
comparison operators: EQ, LE, LT, GE, GT, BETWEEN, and BEGINS_WITH.
&lt;p&gt;
&lt;b&gt;Constraints:&lt;/b&gt;&lt;br/&gt;
&lt;b&gt;Allowed Values: &lt;/b&gt;EQ, NE, IN, LE, LT, GE, GT, BETWEEN, NOTNULL, NULL, CONTAINS, NOTCONTAINS, BEGINS_WITH</Abstract>
			<DeclaredIn>DynamoDBCondition.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *comparisonOperator</Declaration>
			
			
			<Anchor>//api/name/comparisonOperator</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DynamoDBCondition/comparisonOperator</TokenIdentifier>
			<Abstract type="html">A comparison operator is an enumeration of several operations: &lt;ul&gt;
&lt;li&gt;&lt;code&gt;EQ&lt;/code&gt; for &lt;em&gt;equal&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;NE&lt;/code&gt; for
&lt;em&gt;not equal&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;IN&lt;/code&gt; checks for exact
matches.&lt;/li&gt; &lt;li&gt;&lt;code&gt;LE&lt;/code&gt; for &lt;em&gt;less than or equal
to&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;LT&lt;/code&gt; for &lt;em&gt;less than&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GE&lt;/code&gt; for &lt;em&gt;greater than or equal to&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GT&lt;/code&gt; for &lt;em&gt;greater than&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BETWEEN&lt;/code&gt; for &lt;em&gt;between&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NOT_NULL&lt;/code&gt; for &lt;em&gt;exists&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NULL&lt;/code&gt; for &lt;em&gt;not exists&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CONTAINS&lt;/code&gt; for substring or value in a set.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NOT_CONTAINS&lt;/code&gt; for absence of a substring or absence of
a value in a set.&lt;/li&gt; &lt;li&gt;&lt;code&gt;BEGINS_WITH&lt;/code&gt; for a substring
prefix.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Scan operations support all available comparison
operators. &lt;p&gt;Query operations support a subset of the available
comparison operators: EQ, LE, LT, GE, GT, BETWEEN, and BEGINS_WITH.
&lt;p&gt;
&lt;b&gt;Constraints:&lt;/b&gt;&lt;br/&gt;
&lt;b&gt;Allowed Values: &lt;/b&gt;EQ, NE, IN, LE, LT, GE, GT, BETWEEN, NOTNULL, NULL, CONTAINS, NOTCONTAINS, BEGINS_WITH</Abstract>
			<DeclaredIn>DynamoDBCondition.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *comparisonOperator</Declaration>
			
			
			<Anchor>//api/name/comparisonOperator</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DynamoDBCondition/init</TokenIdentifier>
			<Abstract type="html">Default constructor for a new Condition object.  Callers should use the
property methods to initialize this object after creating it.</Abstract>
			<DeclaredIn>DynamoDBCondition.h</DeclaredIn>			
			
			<Declaration>- (id)init</Declaration>
			
			
			<Anchor>//api/name/init</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DynamoDBCondition/addAttributeValueList:</TokenIdentifier>
			<Abstract type="html">Adds a single object to attributeValueList.
This function will alloc and init attributeValueList if not already done.</Abstract>
			<DeclaredIn>DynamoDBCondition.h</DeclaredIn>			
			
			<Declaration>- (void)addAttributeValueList:(DynamoDBAttributeValue *)attributeValueListObject</Declaration>
			
			
			<Anchor>//api/name/addAttributeValueList:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DynamoDBCondition/description</TokenIdentifier>
			<Abstract type="html">Returns a string representation of this object; useful for testing and
debugging.</Abstract>
			<DeclaredIn>DynamoDBCondition.h</DeclaredIn>			
			
			<Declaration>- (NSString *)description</Declaration>
			
			<ReturnValue><Abstract type="html">A string representation of this object.</Abstract></ReturnValue>
			<Anchor>//api/name/description</Anchor>
		</Token>
		
	</File>
</Tokens>