<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/DynamoDBKey.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/DynamoDBKey</TokenIdentifier>
			<Abstract type="html">Key</Abstract>
			<DeclaredIn>DynamoDBKey.h</DeclaredIn>
			
			<NodeRef refid="294"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DynamoDBKey/setHashKeyElement:</TokenIdentifier>
			<Abstract type="html">A hash key element is treated as the primary key, and can be a string
or a number. Single attribute primary keys have one index value. The
value can be &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;,
&lt;code&gt;StringSet&lt;/code&gt;, &lt;code&gt;NumberSet&lt;/code&gt;.</Abstract>
			<DeclaredIn>DynamoDBKey.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) DynamoDBAttributeValue *hashKeyElement</Declaration>
			
			
			<Anchor>//api/name/hashKeyElement</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DynamoDBKey/hashKeyElement</TokenIdentifier>
			<Abstract type="html">A hash key element is treated as the primary key, and can be a string
or a number. Single attribute primary keys have one index value. The
value can be &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;,
&lt;code&gt;StringSet&lt;/code&gt;, &lt;code&gt;NumberSet&lt;/code&gt;.</Abstract>
			<DeclaredIn>DynamoDBKey.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) DynamoDBAttributeValue *hashKeyElement</Declaration>
			
			
			<Anchor>//api/name/hashKeyElement</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DynamoDBKey/setRangeKeyElement:</TokenIdentifier>
			<Abstract type="html">A range key element is treated as a secondary key (used in conjunction
with the primary key), and can be a string or a number, and is only
used for hash-and-range primary keys. The value can be
&lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;, &lt;code&gt;StringSet&lt;/code&gt;,
&lt;code&gt;NumberSet&lt;/code&gt;.</Abstract>
			<DeclaredIn>DynamoDBKey.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) DynamoDBAttributeValue *rangeKeyElement</Declaration>
			
			
			<Anchor>//api/name/rangeKeyElement</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DynamoDBKey/rangeKeyElement</TokenIdentifier>
			<Abstract type="html">A range key element is treated as a secondary key (used in conjunction
with the primary key), and can be a string or a number, and is only
used for hash-and-range primary keys. The value can be
&lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;, &lt;code&gt;StringSet&lt;/code&gt;,
&lt;code&gt;NumberSet&lt;/code&gt;.</Abstract>
			<DeclaredIn>DynamoDBKey.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) DynamoDBAttributeValue *rangeKeyElement</Declaration>
			
			
			<Anchor>//api/name/rangeKeyElement</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DynamoDBKey/init</TokenIdentifier>
			<Abstract type="html">Default constructor for a new Key object.  Callers should use the
property methods to initialize this object after creating it.</Abstract>
			<DeclaredIn>DynamoDBKey.h</DeclaredIn>			
			
			<Declaration>- (id)init</Declaration>
			
			
			<Anchor>//api/name/init</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DynamoDBKey/initWithHashKeyElement:</TokenIdentifier>
			<Abstract type="html">Constructs a new Key object.
Callers should use properties to initialize any additional object members.</Abstract>
			<DeclaredIn>DynamoDBKey.h</DeclaredIn>			
			
			<Declaration>- (id)initWithHashKeyElement:(DynamoDBAttributeValue *)theHashKeyElement</Declaration>
			<Parameters>
				<Parameter>
					<Name>theHashKeyElement</Name>
					<Abstract type="html">A hash key element is treated as the primary
key, and can be a string or a number. Single attribute primary keys
have one index value. The value can be &lt;code&gt;String&lt;/code&gt;,
&lt;code&gt;Number&lt;/code&gt;, &lt;code&gt;StringSet&lt;/code&gt;, &lt;code&gt;NumberSet&lt;/code&gt;.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithHashKeyElement:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DynamoDBKey/initWithHashKeyElement:andRangeKeyElement:</TokenIdentifier>
			<Abstract type="html">Constructs a new Key object.
Callers should use properties to initialize any additional object members.</Abstract>
			<DeclaredIn>DynamoDBKey.h</DeclaredIn>			
			
			<Declaration>- (id)initWithHashKeyElement:(DynamoDBAttributeValue *)theHashKeyElement andRangeKeyElement:(DynamoDBAttributeValue *)theRangeKeyElement</Declaration>
			<Parameters>
				<Parameter>
					<Name>theHashKeyElement</Name>
					<Abstract type="html">A hash key element is treated as the primary
key, and can be a string or a number. Single attribute primary keys
have one index value. The value can be &lt;code&gt;String&lt;/code&gt;,
&lt;code&gt;Number&lt;/code&gt;, &lt;code&gt;StringSet&lt;/code&gt;, &lt;code&gt;NumberSet&lt;/code&gt;.</Abstract>
				</Parameter><Parameter>
					<Name>theRangeKeyElement</Name>
					<Abstract type="html">A range key element is treated as a
secondary key (used in conjunction with the primary key), and can be a
string or a number, and is only used for hash-and-range primary keys.
The value can be &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;,
&lt;code&gt;StringSet&lt;/code&gt;, &lt;code&gt;NumberSet&lt;/code&gt;.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithHashKeyElement:andRangeKeyElement:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DynamoDBKey/description</TokenIdentifier>
			<Abstract type="html">Returns a string representation of this object; useful for testing and
debugging.</Abstract>
			<DeclaredIn>DynamoDBKey.h</DeclaredIn>			
			
			<Declaration>- (NSString *)description</Declaration>
			
			<ReturnValue><Abstract type="html">A string representation of this object.</Abstract></ReturnValue>
			<Anchor>//api/name/description</Anchor>
		</Token>
		
	</File>
</Tokens>